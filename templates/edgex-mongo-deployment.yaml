apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    org.edgexfoundry.service: {{.Values.edgex.app.mongo}}
  name: {{.Values.edgex.app.mongo}}
spec:
  replicas: {{.Values.edgex.replicas.mongo}}
  selector:
    matchLabels:
      org.edgexfoundry.service: edgex-mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        org.edgexfoundry.service: {{.Values.edgex.app.mongo}}
    spec:
      containers:
      - name: {{.Values.edgex.app.mongo}}
        image: {{.Values.edgex.image.mongo.repository}}:{{.Values.edgex.image.mongo.tag}}
        imagePullPolicy: {{.Values.edgex.image.mongo.pullPolicy}}
        ports:
        - containerPort: 27017
        env:
        - name: edgex_registry
          value: consul://{{.Values.edgex.app.core.consul}}:8500
        - name: EDGEX_SECURITY_SECRET_STORE
          value: "false"
        readinessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 15
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 15
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
      {{- if .Values.edgex.resources.mongo.enforceLimits }}
        resources:
          limits:
            memory: {{ .Values.edgex.resources.mongo.limits.memory }}
            cpu: {{ .Values.edgex.resources.mongo.limits.cpu }}
          requests:
            memory: {{ .Values.edgex.resources.mongo.requests.memory }}
            cpu: {{ .Values.edgex.resources.mongo.requests.cpu }}
      {{- end}}
        volumeMounts:
        - mountPath: /data/db
          name: db-data
      hostname: {{.Values.edgex.app.mongo}}
      restartPolicy: Always
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: db-data
status: {}
