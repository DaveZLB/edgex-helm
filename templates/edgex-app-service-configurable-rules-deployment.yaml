apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    org.edgexfoundry.service: {{.Values.edgex.app.appservice.rules}}
  name: {{.Values.edgex.app.appservice.rules}}
spec:
  replicas: {{.Values.edgex.replicas.appservice.rules}}
  selector:
    matchLabels:
      org.edgexfoundry.service: {{.Values.edgex.app.appservice.rules}}
  strategy: {}
  template:
    metadata:
      labels:
        org.edgexfoundry.service: {{.Values.edgex.app.appservice.rules}}
    spec:
      containers:
      - name: {{.Values.edgex.app.appservice.rules}}
        image: {{.Values.edgex.image.appservice.rules.repository}}:{{.Values.edgex.image.appservice.rules.tag}}
        imagePullPolicy: {{.Values.edgex.image.appservice.rules.pullPolicy}}
        ports:
        - containerPort: 48100
        env:
        - name: edgex_registry
          value: consul://{{.Values.edgex.app.core.consul}}:8500
        - name: EDGEX_SECURITY_SECRET_STORE
          value: "false"
        # Read rules-engine configuration.toml
        - name: edgex_profile
          value: rules-engine
        # Override service section in the confituration.toml
        - name: edgex_service
          value: http://{{.Values.edgex.app.appservice.rules}}:48100
        # Override clients section in the confituration.toml
        - name: Clients_CoreData_Host
          value: {{.Values.edgex.app.core.data}}
        - name: Clients_Logging_Host
          value: {{.Values.edgex.app.support.logging}}
        - name: Logging_EnableRemote
          value: "false"
      {{- if .Values.edgex.resources.appservice.rules.enforceLimits }}
        resources:
          limits:
            memory: {{ .Values.edgex.resources.appservice.rules.limits.memory }}
            cpu: {{ .Values.edgex.resources.appservice.rules.limits.cpu }}
          requests:
            memory: {{ .Values.edgex.resources.appservice.rules.requests.memory }}
            cpu: {{ .Values.edgex.resources.appservice.rules.requests.cpu }}
      {{- end}}
      hostname: {{.Values.edgex.app.appservice.rules}}
      restartPolicy: Always
status: {}
